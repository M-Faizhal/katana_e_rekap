<?php

namespace Database\Factories;

use App\Models\Proyek;
use App\Models\User;
use App\Models\Wilayah;
use Illuminate\Database\Eloquent\Factories\Factory;
use Carbon\Carbon;

/**
 * @extends \Illuminate\Database\Eloquent\Factories\Factory<\App\Models\Proyek>
 */
class ProyekFactory extends Factory
{
    /**
     * The name of the factory's corresponding model.
     *
     * @var string
     */
    protected $model = Proyek::class;

    /**
     * Define the model's default state.
     *
     * @return array<string, mixed>
     */
    public function definition(): array
    {
        // Get admin users for assignment
        $adminMarketing = User::where('role', 'admin_marketing')->pluck('id_user');
        $adminPurchasing = User::where('role', 'admin_purchasing')->pluck('id_user');
        $wilayahIds = Wilayah::pluck('id_wilayah');

        // Status options with realistic distribution
        $statusOptions = [
            'Menunggu', 'Penawaran', 'Pembayaran',  
            'Pembayaran', 'Pengiriman', 'Selesai'
        ];

        // Jenis pengadaan options
        $jenisPengadaanOptions = [
            'Pengadaan Langsung',
            'Penunjukan Langsung', 
            'Tender Terbuka',
            'Tender Terbatas',
            'Seleksi Umum',
            'Sayembara',
            'Kontes',
            'E-Purchasing'
        ];

        // Indonesian company/institution names
        $instansiOptions = [
            'PT. Telkom Indonesia',
            'PT. PLN (Persero)',
            'PT. Pertamina',
            'Bank Mandiri',
            'Bank BRI',
            'Bank BNI',
            'Kementerian Pendidikan',
            'Kementerian Kesehatan',
            'Pemkab Bandung',
            'Pemkab Bogor',
            'Pemkot Bekasi',
            'Pemkot Depok',
            'RSUD Cibabat',
            'RSUD Cileunyi',
            'PDAM Tirta Patriot',
            'Dinas Pendidikan Jabar',
            'Dinas Kesehatan Jabar',
            'PLN Area Bekasi',
            'Telkom Witel Bekasi',
            'BPJS Kesehatan',
            'BPJS Ketenagakerjaan'
        ];

        $tanggal = $this->faker->dateTimeBetween('-2 years', 'now');
        $deadline = Carbon::instance($tanggal)->addDays($this->faker->numberBetween(30, 180));

        return [
            'kode_proyek' => null, // Will be auto-generated by model boot method
            'tanggal' => $tanggal,
            'id_wilayah' => $wilayahIds->isNotEmpty() ? $this->faker->randomElement($wilayahIds) : null,
            'kab_kota' => $this->faker->randomElement([
                'Kab. Bandung', 'Kab. Bogor', 'Kab. Bekasi', 'Kab. Karawang',
                'Kot. Bandung', 'Kot. Bogor', 'Kot. Bekasi', 'Kot. Depok',
                'Kab. Sukabumi', 'Kab. Cianjur', 'Kab. Purwakarta', 'Kab. Subang'
            ]),
            'instansi' => $this->faker->randomElement($instansiOptions),
            'nama_klien' => $this->faker->name(),
            'kontak_klien' => $this->faker->phoneNumber(),
            'jenis_pengadaan' => $this->faker->randomElement($jenisPengadaanOptions),
            'deadline' => $deadline,
            'id_admin_marketing' => $adminMarketing->isNotEmpty() ? $this->faker->randomElement($adminMarketing) : null,
            'id_admin_purchasing' => $adminPurchasing->isNotEmpty() ? $this->faker->randomElement($adminPurchasing) : null,
            'id_penawaran' => null, // Will be set when penawaran is created
            'catatan' => $this->faker->optional(0.7)->sentence(),
            'harga_total' => $this->faker->randomFloat(2, 10000000, 5000000000), // 10 juta - 5 miliar
            'status' => $this->faker->randomElement($statusOptions),
            'potensi' => $this->faker->randomElement(['ya', 'tidak']),
            'tahun_potensi' => $this->faker->numberBetween(2023, 2026)
        ];
    }

    /**
     * State for completed projects
     */
    public function completed(): static
    {
        return $this->state(fn (array $attributes) => [
            'status' => 'Selesai',
            'tanggal' => $this->faker->dateTimeBetween('-1 year', '-1 month'),
        ]);
    }

    /**
     * State for ongoing projects
     */
    public function ongoing(): static
    {
        return $this->state(fn (array $attributes) => [
            'status' => $this->faker->randomElement(['Penawaran', 'Pembayaran', 'Pengiriman']),
            'tanggal' => $this->faker->dateTimeBetween('-6 months', 'now'),
        ]);
    }

    /**
     * State for pending projects
     */
    public function pending(): static
    {
        return $this->state(fn (array $attributes) => [
            'status' => 'Menunggu',
            'tanggal' => $this->faker->dateTimeBetween('-1 month', 'now'),
        ]);
    }

    /**
     * State for high value projects (> 1 Miliar)
     */
    public function highValue(): static
    {
        return $this->state(fn (array $attributes) => [
            'harga_total' => $this->faker->randomFloat(2, 1000000000, 10000000000), // 1-10 miliar
            'potensi' => 'ya'
        ]);
    }

    /**
     * State for medium value projects (100 juta - 1 Miliar)
     */
    public function mediumValue(): static
    {
        return $this->state(fn (array $attributes) => [
            'harga_total' => $this->faker->randomFloat(2, 100000000, 1000000000), // 100 juta - 1 miliar
            'potensi' => 'ya'
        ]);
    }

    /**
     * State for low value projects (< 100 juta)
     */
    public function lowValue(): static
    {
        return $this->state(fn (array $attributes) => [
            'harga_total' => $this->faker->randomFloat(2, 10000000, 100000000), // 10-100 juta
            'potensi' => 'tidak'
        ]);
    }

    /**
     * State for projects from this year
     */
    public function thisYear(): static
    {
        return $this->state(fn (array $attributes) => [
            'tanggal' => $this->faker->dateTimeBetween('2025-01-01', 'now'),
            'tahun_potensi' => 2025
        ]);
    }

    /**
     * State for projects from last year
     */
    public function lastYear(): static
    {
        return $this->state(fn (array $attributes) => [
            'tanggal' => $this->faker->dateTimeBetween('2024-01-01', '2024-12-31'),
            'tahun_potensi' => 2024
        ]);
    }

    /**
     * State for government projects
     */
    public function government(): static
    {
        $govInstansi = [
            'Kementerian Pendidikan',
            'Kementerian Kesehatan', 
            'Pemkab Bandung',
            'Pemkab Bogor',
            'Pemkot Bekasi',
            'Pemkot Depok',
            'Dinas Pendidikan Jabar',
            'Dinas Kesehatan Jabar',
            'RSUD Cibabat',
            'RSUD Cileunyi'
        ];

        return $this->state(fn (array $attributes) => [
            'instansi' => $this->faker->randomElement($govInstansi),
            'jenis_pengadaan' => $this->faker->randomElement([
                'Tender Terbuka', 'Tender Terbatas', 'Penunjukan Langsung', 'E-Purchasing'
            ])
        ]);
    }

    /**
     * State for private company projects
     */
    public function private(): static
    {
        $privateInstansi = [
            'PT. Telkom Indonesia',
            'PT. PLN (Persero)',
            'PT. Pertamina',
            'Bank Mandiri',
            'Bank BRI',
            'Bank BNI',
            'PDAM Tirta Patriot',
            'BPJS Kesehatan',
            'BPJS Ketenagakerjaan'
        ];

        return $this->state(fn (array $attributes) => [
            'instansi' => $this->faker->randomElement($privateInstansi),
            'jenis_pengadaan' => $this->faker->randomElement([
                'Pengadaan Langsung', 'Penunjukan Langsung', 'Seleksi Umum'
            ])
        ]);
    }
}
